AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: CI/CD Demo Application

Globals:
  Function:
    Timeout: 30
    Runtime: python3.9
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod
    Description: Environment name

Resources:
  CICDDemoFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'ci-cd-demo-app-${Environment}'
      CodeUri: .
      Handler: app.lambda_handler
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
        Root:
          Type: Api
          Properties:
            Path: /
            Method: ANY
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment

  CICDDemoApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Sub 'ci-cd-demo-app-${Environment}'
      ComputePlatform: Server

  CICDDemoDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref CICDDemoApplication
      DeploymentGroupName: !Sub 'ci-cd-demo-dg-${Environment}'
      ServiceRoleArn: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CodeDeployServiceRole'
      DeploymentConfigName: CodeDeployDefault.AllAtOneCodeDeploy

Outputs:
  CICDDemoApi:
    Description: "API Gateway endpoint URL for CI/CD Demo function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Stage/"
  
  CICDDemoFunction:
    Description: "CI/CD Demo Lambda Function ARN"
    Value: !GetAtt CICDDemoFunction.Arn
    
  ApplicationName:
    Description: "CodeDeploy Application Name"
    Value: !Ref CICDDemoApplication